Engine\Source\Runtime\CoreUObject\Private\UObject\ScriptCore.cpp:1752

void UObject::ProcessEvent( UFunction* Function, void* Parms )
{
	checkf(!IsUnreachable(),TEXT("%s  Function: '%s'"), *GetFullName(), *Function->GetPathName());
	checkf(!FUObjectThreadContext::Get().IsRoutingPostLoad, TEXT("Cannot call UnrealScript (%s - %s) while PostLoading objects"), *GetFullName(), *Function->GetFullName());

#if TOTAL_OVERHEAD_SCRIPT_STATS
	FBlueprintEventTimer::FScopedVMTimer VMTime;
#endif // TOTAL_OVERHEAD_SCRIPT_STATS

	// Reject.
	if (IsPendingKill())
	{
		return;
	}
	
#if WITH_EDITORONLY_DATA
	// Cannot invoke script events when the game thread is paused for debugging.
	if(GIntraFrameDebuggingGameThread)
	{
		if(GFirstFrameIntraFrameDebugging)
		{
			UE_LOG(LogScriptCore, Warning, TEXT("Cannot call UnrealScript (%s - %s) while stopped at a breakpoint."), *GetFullName(), *Function->GetFullName());
		}

		return;
	}
#endif	// WITH_EDITORONLY_DATA

	if ((Function->FunctionFlags & FUNC_Native) != 0)
	{
		int32 FunctionCallspace = GetFunctionCallspace(Function, NULL);
		if (FunctionCallspace & FunctionCallspace::Remote)
		{
			CallRemoteFunction(Function, Parms, NULL, NULL);
		}

		if ((FunctionCallspace & FunctionCallspace::Local) == 0)
		{
			return;
		}
	}
	else if (Function->Script.Num() == 0)
	{
		return;
	}
	checkSlow((Function->ParmsSize == 0) || (Parms != NULL));

#if PER_FUNCTION_SCRIPT_STATS
	const bool bShouldTrackFunction = Stats::IsThreadCollectingData();
	FScopeCycleCounterUObject FunctionScope(bShouldTrackFunction ? Function : nullptr);
#endif // PER_FUNCTION_SCRIPT_STATS

#if STATS || ENABLE_STATNAMEDEVENTS
	const bool bShouldTrackObject = GVerboseScriptStats && Stats::IsThreadCollectingData();
	FScopeCycleCounterUObject ContextScope(bShouldTrackObject ? this : nullptr);
#endif

#if LIGHTWEIGHT_PROCESS_EVENT_COUNTER
	CONDITIONAL_SCOPE_CYCLE_COUNTER(STAT_BlueprintTime, IsInGameThread() && ProcessEventCounter == 0);
	TGuardValue<int32> PECounter(ProcessEventCounter, ProcessEventCounter + 1);
#endif

#if DO_BLUEPRINT_GUARD
	FBlueprintExceptionTracker& BlueprintExceptionTracker = FBlueprintExceptionTracker::Get();
	TGuardValue<int32> EntryCounter(BlueprintExceptionTracker.ScriptEntryTag, BlueprintExceptionTracker.ScriptEntryTag + 1);

	CONDITIONAL_SCOPE_CYCLE_COUNTER(STAT_BlueprintTime, IsInGameThread() && BlueprintExceptionTracker.ScriptEntryTag == 1);
#endif

#if UE_BLUEPRINT_EVENTGRAPH_FASTCALLS
	// Fast path for ubergraph calls
	int32 EventGraphParams;
	if (Function->EventGraphFunction != nullptr)
	{
		// Call directly into the event graph, skipping the stub thunk function
		EventGraphParams = Function->EventGraphCallOffset;
		Parms = &EventGraphParams;
		Function = Function->EventGraphFunction;

		// Validate assumptions required for this optimized path (EventGraphFunction should have only been filled out if these held)
		checkSlow(Function->ParmsSize == sizeof(EventGraphParams));
		checkSlow(Function->FirstPropertyToInit == nullptr);
		checkSlow(Function->PostConstructLink == nullptr);
	}
#endif

	// Scope required for scoped script stats.
	{
		uint8* Frame = NULL;
#if USE_UBER_GRAPH_PERSISTENT_FRAME
		if (Function->HasAnyFunctionFlags(FUNC_UbergraphFunction))
		{
			Frame = Function->GetOuterUClassUnchecked()->GetPersistentUberGraphFrame(this, Function);
		}
#endif
		const bool bUsePersistentFrame = (NULL != Frame);
		if (!bUsePersistentFrame)
		{
			Frame = (uint8*)FMemory_Alloca(Function->PropertiesSize);
			// zero the local property memory
			FMemory::Memzero(Frame + Function->ParmsSize, Function->PropertiesSize - Function->ParmsSize);
		}

		// initialize the parameter properties
		FMemory::Memcpy(Frame, Parms, Function->ParmsSize);

		// Create a new local execution stack.
		FFrame NewStack(this, Function, Frame, NULL, Function->ChildProperties);

		checkSlow(NewStack.Locals || Function->ParmsSize == 0);



		// if the function has out parameters, fill the stack frame's out parameter info with the info for those params 
		if ( Function->HasAnyFunctionFlags(FUNC_HasOutParms) )
		{
			FOutParmRec** LastOut = &NewStack.OutParms;
			for ( FProperty* Property = (FProperty*)(Function->ChildProperties); Property && (Property->PropertyFlags&(CPF_Parm)) == CPF_Parm; Property = (FProperty*)Property->Next )
			{
				// this is used for optional parameters - the destination address for out parameter values is the address of the calling function
				// so we'll need to know which address to use if we need to evaluate the default parm value expression located in the new function's
				// bytecode
				if ( Property->HasAnyPropertyFlags(CPF_OutParm) )
				{
					CA_SUPPRESS(6263)
					FOutParmRec* Out = (FOutParmRec*)FMemory_Alloca(sizeof(FOutParmRec));
					// set the address and property in the out param info
					// note that since C++ doesn't support "optional out" we can ignore that here
					Out->PropAddr = Property->ContainerPtrToValuePtr<uint8>(Parms);
					Out->Property = Property;

					// add the new out param info to the stack frame's linked list
					if (*LastOut)
					{
						(*LastOut)->NextOutParm = Out;
						LastOut = &(*LastOut)->NextOutParm;
					}
					else
					{
						*LastOut = Out;
					}
				}
			}

			// set the next pointer of the last item to NULL to mark the end of the list
			if (*LastOut)
			{
				(*LastOut)->NextOutParm = NULL;
			}
		}

		if (!bUsePersistentFrame)
		{
			for (FProperty* LocalProp = Function->FirstPropertyToInit; LocalProp != NULL; LocalProp = (FProperty*)LocalProp->Next)
			{
				LocalProp->InitializeValue_InContainer(NewStack.Locals);
			}
		}

		// Call native function or UObject::ProcessInternal.
		const bool bHasReturnParam = Function->ReturnValueOffset != MAX_uint16;
		uint8* ReturnValueAddress = bHasReturnParam ? ((uint8*)Parms + Function->ReturnValueOffset) : nullptr;
		Function->Invoke(this, NewStack, ReturnValueAddress);

		if (!bUsePersistentFrame)
		{
			// Destroy local variables except function parameters.!! see also UObject::CallFunctionByNameWithArguments
			// also copy back constructed value parms here so the correct copy is destroyed when the event function returns
			for (FProperty* P = Function->DestructorLink; P; P = P->DestructorLinkNext)
			{
				if (!P->IsInContainer(Function->ParmsSize))
				{
					P->DestroyValue_InContainer(NewStack.Locals);
				}
				else if (!(P->PropertyFlags & CPF_OutParm))
				{
					FMemory::Memcpy(P->ContainerPtrToValuePtr<uint8>(Parms), P->ContainerPtrToValuePtr<uint8>(NewStack.Locals), P->ArrayDim * P->ElementSize);
				}
			}
		}
	}

#if !(UE_BUILD_SHIPPING || UE_BUILD_TEST)
#if WITH_EDITORONLY_DATA
	FBlueprintCoreDelegates::OnScriptExecutionEnd.Broadcast();
#endif
#endif
}

40 55 56 57 41 54 41 55 41 56 41 57 48 81 EC F0 00 00 00

00007FF7AB53D150 | 40:55                                 | push rbp                                                               | ProcessEvent
00007FF7AB53D152 | 56                                    | push rsi                                                               |
00007FF7AB53D153 | 57                                    | push rdi                                                               |
00007FF7AB53D154 | 41:54                                 | push r12                                                               |
00007FF7AB53D156 | 41:55                                 | push r13                                                               |
00007FF7AB53D158 | 41:56                                 | push r14                                                               |
00007FF7AB53D15A | 41:57                                 | push r15                                                               |
00007FF7AB53D15C | 48:81EC F0000000                      | sub rsp,F0                                                             |
00007FF7AB53D163 | 48:8D6C24 30                          | lea rbp,qword ptr ss:[rsp+30]                                          | [rsp+30]:"H‹\\$0H‹|$8HƒÄ ^ÃÌÌÌÌÌÌÌÌ@UAUH‹ìHƒìhH‰´$"
00007FF7AB53D168 | 48:899D 18010000                      | mov qword ptr ss:[rbp+118],rbx                                         |
00007FF7AB53D16F | 48:8B05 927F4B03                      | mov rax,qword ptr ds:[7FF7AE9F5108]                                    |
00007FF7AB53D176 | 48:33C5                               | xor rax,rbp                                                            |
00007FF7AB53D179 | 48:8985 B0000000                      | mov qword ptr ss:[rbp+B0],rax                                          |
00007FF7AB53D180 | 8B41 0C                               | mov eax,dword ptr ds:[rcx+C]                                           |
00007FF7AB53D183 | 45:33F6                               | xor r14d,r14d                                                          |
00007FF7AB53D186 | 3B05 B82B5A03                         | cmp eax,dword ptr ds:[7FF7AEADFD44]                                    | 00007FF7AEADFD44:"ÛØ\x04"
00007FF7AB53D18C | 4D:8BF8                               | mov r15,r8                                                             |
00007FF7AB53D18F | 48:8BF2                               | mov rsi,rdx                                                            |
00007FF7AB53D192 | 4C:8BE1                               | mov r12,rcx                                                            |
00007FF7AB53D195 | 41:B8 FFFF0000                        | mov r8d,FFFF                                                           |
00007FF7AB53D19B | 7D 2A                                 | jge fsd-win64-shipping.7FF7AB53D1C7                                    |
00007FF7AB53D19D | 99                                    | cdq                                                                    |
00007FF7AB53D19E | 41:23D0                               | and edx,r8d                                                            |
00007FF7AB53D1A1 | 03C2                                  | add eax,edx                                                            |
00007FF7AB53D1A3 | 8BC8                                  | mov ecx,eax                                                            |
00007FF7AB53D1A5 | 41:23C0                               | and eax,r8d                                                            |
00007FF7AB53D1A8 | 2BC2                                  | sub eax,edx                                                            |
00007FF7AB53D1AA | 48:98                                 | cdqe                                                                   |
00007FF7AB53D1AC | C1F9 10                               | sar ecx,10                                                             |
00007FF7AB53D1AF | 48:63C9                               | movsxd rcx,ecx                                                         |
00007FF7AB53D1B2 | 48:8D1440                             | lea rdx,qword ptr ds:[rax+rax*2]                                       |
00007FF7AB53D1B6 | 48:8B05 732B5A03                      | mov rax,qword ptr ds:[7FF7AEADFD30]                                    |
00007FF7AB53D1BD | 48:8B0CC8                             | mov rcx,qword ptr ds:[rax+rcx*8]                                       |
00007FF7AB53D1C1 | 48:8D04D1                             | lea rax,qword ptr ds:[rcx+rdx*8]                                       |
00007FF7AB53D1C5 | EB 03                                 | jmp fsd-win64-shipping.7FF7AB53D1CA                                    |
00007FF7AB53D1C7 | 49:8BC6                               | mov rax,r14                                                            |
00007FF7AB53D1CA | 8B40 08                               | mov eax,dword ptr ds:[rax+8]                                           |
00007FF7AB53D1CD | C1E8 1D                               | shr eax,1D                                                             |
00007FF7AB53D1D0 | A8 01                                 | test al,1                                                              |
00007FF7AB53D1D2 | 0F85 F8020000                         | jne fsd-win64-shipping.7FF7AB53D4D0                                    |
00007FF7AB53D1D8 | F786 B0000000 00040000                | test dword ptr ds:[rsi+B0],400                                         | FUNC_Native
00007FF7AB53D1E2 | 74 3A                                 | je fsd-win64-shipping.7FF7AB53D21E                                     |
00007FF7AB53D1E4 | 49:8B0424                             | mov rax,qword ptr ds:[r12]                                             |
00007FF7AB53D1E8 | 45:33C0                               | xor r8d,r8d                                                            |
00007FF7AB53D1EB | 48:8BD6                               | mov rdx,rsi                                                            |
00007FF7AB53D1EE | 49:8BCC                               | mov rcx,r12                                                            |
00007FF7AB53D1F1 | FF90 18020000                         | call qword ptr ds:[rax+218]                                            | int32 FunctionCallspace = GetFunctionCallspace(Function, NULL);
00007FF7AB53D1F7 | 8BD8                                  | mov ebx,eax                                                            |
00007FF7AB53D1F9 | A8 01                                 | test al,1                                                              | if (FunctionCallspace & FunctionCallspace::Remote)
00007FF7AB53D1FB | 74 1C                                 | je fsd-win64-shipping.7FF7AB53D219                                     |
00007FF7AB53D1FD | 4D:8B1424                             | mov r10,qword ptr ds:[r12]                                             |
00007FF7AB53D201 | 45:33C9                               | xor r9d,r9d                                                            |
00007FF7AB53D204 | 4D:8BC7                               | mov r8,r15                                                             |
00007FF7AB53D207 | 4C:897424 20                          | mov qword ptr ss:[rsp+20],r14                                          |
00007FF7AB53D20C | 48:8BD6                               | mov rdx,rsi                                                            |
00007FF7AB53D20F | 49:8BCC                               | mov rcx,r12                                                            |
00007FF7AB53D212 | 41:FF92 20020000                      | call qword ptr ds:[r10+220]                                            | CallRemoteFunction(Function, Parms, NULL, NULL);
00007FF7AB53D219 | F6C3 02                               | test bl,2                                                              |
00007FF7AB53D21C | EB 04                                 | jmp fsd-win64-shipping.7FF7AB53D222                                    |
00007FF7AB53D21E | 44:3976 68                            | cmp dword ptr ds:[rsi+68],r14d                                         |
00007FF7AB53D222 | 0F84 A8020000                         | je fsd-win64-shipping.7FF7AB53D4D0                                     |
00007FF7AB53D228 | 48:8B8E C8000000                      | mov rcx,qword ptr ds:[rsi+C8]                                          | if (Function->EventGraphFunction != nullptr)
00007FF7AB53D22F | 48:85C9                               | test rcx,rcx                                                           |
00007FF7AB53D232 | 74 10                                 | je fsd-win64-shipping.7FF7AB53D244                                     |
00007FF7AB53D234 | 8B86 D0000000                         | mov eax,dword ptr ds:[rsi+D0]                                          | EventGraphParams = Function->EventGraphCallOffset;
00007FF7AB53D23A | 4C:8D7D 00                            | lea r15,qword ptr ss:[rbp]                                             |
00007FF7AB53D23E | 8945 00                               | mov dword ptr ss:[rbp],eax                                             | Parms = &EventGraphParams;
00007FF7AB53D241 | 48:8BF1                               | mov rsi,rcx                                                            | Function = Function->EventGraphFunction;
00007FF7AB53D244 | F786 B0000000 00800000                | test dword ptr ds:[rsi+B0],8000                                        | if (Function->HasAnyFunctionFlags(FUNC_UbergraphFunction))
00007FF7AB53D24E | 49:8BFE                               | mov rdi,r14                                                            |
00007FF7AB53D251 | 74 16                                 | je fsd-win64-shipping.7FF7AB53D269                                     |
00007FF7AB53D253 | 48:8B4E 20                            | mov rcx,qword ptr ds:[rsi+20]                                          |
00007FF7AB53D257 | 4C:8BC6                               | mov r8,rsi                                                             |
00007FF7AB53D25A | 49:8BD4                               | mov rdx,r12                                                            |
00007FF7AB53D25D | 48:8B01                               | mov rax,qword ptr ds:[rcx]                                             |
00007FF7AB53D260 | FF90 28030000                         | call qword ptr ds:[rax+328]                                            |
00007FF7AB53D266 | 48:8BF8                               | mov rdi,rax                                                            |
00007FF7AB53D269 | 48:8BDF                               | mov rbx,rdi                                                            |
00007FF7AB53D26C | 4C:8BEF                               | mov r13,rdi                                                            |
00007FF7AB53D26F | 48:85FF                               | test rdi,rdi                                                           |
00007FF7AB53D272 | 75 54                                 | jne fsd-win64-shipping.7FF7AB53D2C8                                    |
00007FF7AB53D274 | 8B56 58                               | mov edx,dword ptr ds:[rsi+58]                                          |
00007FF7AB53D277 | 85D2                                  | test edx,edx                                                           |
00007FF7AB53D279 | 75 05                                 | jne fsd-win64-shipping.7FF7AB53D280                                    |
00007FF7AB53D27B | 49:8BFE                               | mov rdi,r14                                                            |
00007FF7AB53D27E | EB 32                                 | jmp fsd-win64-shipping.7FF7AB53D2B2                                    |
00007FF7AB53D280 | 8D42 0F                               | lea eax,qword ptr ds:[rdx+F]                                           |
00007FF7AB53D283 | 48:63C8                               | movsxd rcx,eax                                                         |
00007FF7AB53D286 | 48:8D41 0F                            | lea rax,qword ptr ds:[rcx+F]                                           |
00007FF7AB53D28A | 48:3BC1                               | cmp rax,rcx                                                            |
00007FF7AB53D28D | 77 0A                                 | ja fsd-win64-shipping.7FF7AB53D299                                     |
00007FF7AB53D28F | 48:B8 F0FFFFFFFFFFFF0F                | mov rax,FFFFFFFFFFFFFF0                                                |
00007FF7AB53D299 | 48:83E0 F0                            | and rax,FFFFFFFFFFFFFFF0                                               |
00007FF7AB53D29D | E8 0E0B0202                           | call fsd-win64-shipping.7FF7AD55DDB0                                   |
00007FF7AB53D2A2 | 48:2BE0                               | sub rsp,rax                                                            |
00007FF7AB53D2A5 | 48:8D7C24 30                          | lea rdi,qword ptr ss:[rsp+30]                                          | [rsp+30]:"H‹\\$0H‹|$8HƒÄ ^ÃÌÌÌÌÌÌÌÌ@UAUH‹ìHƒìhH‰´$"
00007FF7AB53D2AA | 48:83C7 0F                            | add rdi,F                                                              |
00007FF7AB53D2AE | 48:83E7 F0                            | and rdi,FFFFFFFFFFFFFFF0                                               |
00007FF7AB53D2B2 | 0FB78E B6000000                       | movzx ecx,word ptr ds:[rsi+B6]                                         |
00007FF7AB53D2B9 | 2BD1                                  | sub edx,ecx                                                            |
00007FF7AB53D2BB | 48:03CF                               | add rcx,rdi                                                            |
00007FF7AB53D2BE | 4C:63C2                               | movsxd r8,edx                                                          |
00007FF7AB53D2C1 | 33D2                                  | xor edx,edx                                                            |
00007FF7AB53D2C3 | E8 ED480202                           | call <JMP.&memset>                                                     |
00007FF7AB53D2C8 | 44:0FB786 B6000000                    | movzx r8d,word ptr ds:[rsi+B6]                                         |
00007FF7AB53D2D0 | 49:8BD7                               | mov rdx,r15                                                            |
00007FF7AB53D2D3 | 48:8BCF                               | mov rcx,rdi                                                            |
00007FF7AB53D2D6 | E8 CE480202                           | call <JMP.&memmove>                                                    |
00007FF7AB53D2DB | F786 B0000000 00004000                | test dword ptr ds:[rsi+B0],xinput1_3.400000                            | 400000:"MZ"
00007FF7AB53D2E5 | 48:8D05 BCB24902                      | lea rax,qword ptr ds:[7FF7AD9D85A8]                                    |
00007FF7AB53D2EC | 48:8B4E 50                            | mov rcx,qword ptr ds:[rsi+50]                                          |
00007FF7AB53D2F0 | 0F57C0                                | xorps xmm0,xmm0                                                        |
00007FF7AB53D2F3 | 48:8945 10                            | mov qword ptr ss:[rbp+10],rax                                          |
00007FF7AB53D2F7 | 48:8B46 60                            | mov rax,qword ptr ds:[rsi+60]                                          |
00007FF7AB53D2FB | 48:8945 30                            | mov qword ptr ss:[rbp+30],rax                                          |
00007FF7AB53D2FF | 66:C745 18 0001                       | mov word ptr ss:[rbp+18],100                                           |
00007FF7AB53D305 | 48:8975 20                            | mov qword ptr ss:[rbp+20],rsi                                          |
00007FF7AB53D309 | 4C:8965 28                            | mov qword ptr ss:[rbp+28],r12                                          |
00007FF7AB53D30D | 48:897D 38                            | mov qword ptr ss:[rbp+38],rdi                                          |
00007FF7AB53D311 | 66:0F7F45 40                          | movdqa xmmword ptr ss:[rbp+40],xmm0                                    |
00007FF7AB53D316 | 4C:8975 70                            | mov qword ptr ss:[rbp+70],r14                                          |
00007FF7AB53D31A | 44:8975 78                            | mov dword ptr ss:[rbp+78],r14d                                         |
00007FF7AB53D31E | C745 7C 08000000                      | mov dword ptr ss:[rbp+7C],8                                            |
00007FF7AB53D325 | 66:0F7F85 80000000                    | movdqa xmmword ptr ss:[rbp+80],xmm0                                    |
00007FF7AB53D32D | 48:898D 90000000                      | mov qword ptr ss:[rbp+90],rcx                                          |
00007FF7AB53D334 | 4C:89B5 98000000                      | mov qword ptr ss:[rbp+98],r14                                          |
00007FF7AB53D33B | 44:88B5 A0000000                      | mov byte ptr ss:[rbp+A0],r14b                                          |
00007FF7AB53D342 | 74 70                                 | je fsd-win64-shipping.7FF7AB53D3B4                                     |
00007FF7AB53D344 | 4C:8D85 88000000                      | lea r8,qword ptr ss:[rbp+88]                                           |
00007FF7AB53D34B | 48:85C9                               | test rcx,rcx                                                           |
00007FF7AB53D34E | 74 64                                 | je fsd-win64-shipping.7FF7AB53D3B4                                     |
00007FF7AB53D350 | 48:8B41 40                            | mov rax,qword ptr ds:[rcx+40]                                          |
00007FF7AB53D354 | 84C0                                  | test al,al                                                             |
00007FF7AB53D356 | 79 4C                                 | jns fsd-win64-shipping.7FF7AB53D3A4                                    |
00007FF7AB53D358 | 48:0FBAE0 08                          | bt rax,8                                                               | if ( Property->HasAnyPropertyFlags(CPF_OutParm) )
00007FF7AB53D35D | 73 3C                                 | jae fsd-win64-shipping.7FF7AB53D39B                                    |
00007FF7AB53D35F | 8B0424                                | mov eax,dword ptr ss:[rsp]                                             |
00007FF7AB53D362 | 48:83EC 30                            | sub rsp,30                                                             |
00007FF7AB53D366 | 48:8D5424 30                          | lea rdx,qword ptr ss:[rsp+30]                                          | [rsp+30]:"H‹\\$0H‹|$8HƒÄ ^ÃÌÌÌÌÌÌÌÌ@UAUH‹ìHƒìhH‰´$"
00007FF7AB53D36B | 8B02                                  | mov eax,dword ptr ds:[rdx]                                             |
00007FF7AB53D36D | 48:6341 4C                            | movsxd rax,dword ptr ds:[rcx+4C]                                       |
00007FF7AB53D371 | 48:83C2 0F                            | add rdx,F                                                              |
00007FF7AB53D375 | 48:83E2 F0                            | and rdx,FFFFFFFFFFFFFFF0                                               |
00007FF7AB53D379 | 49:03C7                               | add rax,r15                                                            |
00007FF7AB53D37C | 48:8942 08                            | mov qword ptr ds:[rdx+8],rax                                           |
00007FF7AB53D380 | 48:890A                               | mov qword ptr ds:[rdx],rcx                                             |
00007FF7AB53D383 | 49:8B00                               | mov rax,qword ptr ds:[r8]                                              |
00007FF7AB53D386 | 48:85C0                               | test rax,rax                                                           |
00007FF7AB53D389 | 74 0D                                 | je fsd-win64-shipping.7FF7AB53D398                                     |
00007FF7AB53D38B | 48:8950 10                            | mov qword ptr ds:[rax+10],rdx                                          |
00007FF7AB53D38F | 4D:8B00                               | mov r8,qword ptr ds:[r8]                                               |
00007FF7AB53D392 | 49:83C0 10                            | add r8,10                                                              |
00007FF7AB53D396 | EB 03                                 | jmp fsd-win64-shipping.7FF7AB53D39B                                    |
00007FF7AB53D398 | 49:8910                               | mov qword ptr ds:[r8],rdx                                              |
00007FF7AB53D39B | 48:8B49 20                            | mov rcx,qword ptr ds:[rcx+20]                                          |
00007FF7AB53D39F | 48:85C9                               | test rcx,rcx                                                           |
00007FF7AB53D3A2 | 75 AC                                 | jne fsd-win64-shipping.7FF7AB53D350                                    |
00007FF7AB53D3A4 | 49:8B00                               | mov rax,qword ptr ds:[r8]                                              |
00007FF7AB53D3A7 | 48:85C0                               | test rax,rax                                                           |
00007FF7AB53D3AA | 74 04                                 | je fsd-win64-shipping.7FF7AB53D3B0                                     |
00007FF7AB53D3AC | 4C:8970 10                            | mov qword ptr ds:[rax+10],r14                                          | (*LastOut)->NextOutParm = NULL;
00007FF7AB53D3B0 | 48:8B7D 38                            | mov rdi,qword ptr ss:[rbp+38]                                          |
00007FF7AB53D3B4 | 48:85DB                               | test rbx,rbx                                                           |
00007FF7AB53D3B7 | 75 52                                 | jne fsd-win64-shipping.7FF7AB53D40B                                    |
00007FF7AB53D3B9 | 48:8B9E C0000000                      | mov rbx,qword ptr ds:[rsi+C0]                                          |
00007FF7AB53D3C0 | 48:85DB                               | test rbx,rbx                                                           |
00007FF7AB53D3C3 | 74 46                                 | je fsd-win64-shipping.7FF7AB53D40B                                     |
00007FF7AB53D3C5 | 8B43 40                               | mov eax,dword ptr ds:[rbx+40]                                          |
00007FF7AB53D3C8 | 48:0FBAE0 09                          | bt rax,9                                                               |
00007FF7AB53D3CD | 73 1A                                 | jae fsd-win64-shipping.7FF7AB53D3E9                                    |
00007FF7AB53D3CF | 8B43 3C                               | mov eax,dword ptr ds:[rbx+3C]                                          |
00007FF7AB53D3D2 | 33D2                                  | xor edx,edx                                                            |
00007FF7AB53D3D4 | 0FAF43 38                             | imul eax,dword ptr ds:[rbx+38]                                         |
00007FF7AB53D3D8 | 48:634B 4C                            | movsxd rcx,dword ptr ds:[rbx+4C]                                       |
00007FF7AB53D3DC | 48:03CF                               | add rcx,rdi                                                            |
00007FF7AB53D3DF | 4C:63C0                               | movsxd r8,eax                                                          |
00007FF7AB53D3E2 | E8 CE470202                           | call <JMP.&memset>                                                     |
00007FF7AB53D3E7 | EB 13                                 | jmp fsd-win64-shipping.7FF7AB53D3FC                                    |
00007FF7AB53D3E9 | 48:6353 4C                            | movsxd rdx,dword ptr ds:[rbx+4C]                                       |
00007FF7AB53D3ED | 48:8BCB                               | mov rcx,rbx                                                            |
00007FF7AB53D3F0 | 48:8B03                               | mov rax,qword ptr ds:[rbx]                                             |
00007FF7AB53D3F3 | 48:03D7                               | add rdx,rdi                                                            |
00007FF7AB53D3F6 | FF90 F0000000                         | call qword ptr ds:[rax+F0]                                             |
00007FF7AB53D3FC | 48:8B5B 20                            | mov rbx,qword ptr ds:[rbx+20]                                          |
00007FF7AB53D400 | 48:85DB                               | test rbx,rbx                                                           |
00007FF7AB53D403 | 74 06                                 | je fsd-win64-shipping.7FF7AB53D40B                                     |
00007FF7AB53D405 | 48:8B7D 38                            | mov rdi,qword ptr ss:[rbp+38]                                          |
00007FF7AB53D409 | EB BA                                 | jmp fsd-win64-shipping.7FF7AB53D3C5                                    |
00007FF7AB53D40B | 0FB786 B8000000                       | movzx eax,word ptr ds:[rsi+B8]                                         | ReturnValueOffset
00007FF7AB53D412 | B9 FFFF0000                           | mov ecx,FFFF                                                           | MAX_uint16
00007FF7AB53D417 | 66:3BC1                               | cmp ax,cx                                                              |
00007FF7AB53D41A | 74 07                                 | je fsd-win64-shipping.7FF7AB53D423                                     |
00007FF7AB53D41C | 44:0FB7F0                             | movzx r14d,ax                                                          |
00007FF7AB53D420 | 4D:03F7                               | add r14,r15                                                            | (uint8*)Parms + Function->ReturnValueOffset
00007FF7AB53D423 | 4D:8BCE                               | mov r9,r14                                                             | uint8* ReturnValueAddress = bHasReturnParam ? ((uint8*)Parms + Function->ReturnValueOffset) : nullptr;
00007FF7AB53D426 | 4C:8D45 10                            | lea r8,qword ptr ss:[rbp+10]                                           |
00007FF7AB53D42A | 49:8BD4                               | mov rdx,r12                                                            |
00007FF7AB53D42D | 48:8BCE                               | mov rcx,rsi                                                            |
00007FF7AB53D430 | E8 6B7DEBFF                           | call fsd-win64-shipping.7FF7AB3F51A0                                   | Function->Invoke(this, NewStack, ReturnValueAddress);
00007FF7AB53D435 | 4D:85ED                               | test r13,r13                                                           |
00007FF7AB53D438 | 75 7D                                 | jne fsd-win64-shipping.7FF7AB53D4B7                                    |
00007FF7AB53D43A | 48:8B9E 80000000                      | mov rbx,qword ptr ds:[rsi+80]                                          |
00007FF7AB53D441 | 48:85DB                               | test rbx,rbx                                                           |
00007FF7AB53D444 | 74 71                                 | je fsd-win64-shipping.7FF7AB53D4B7                                     |
00007FF7AB53D446 | 6666:0F1F8400 00000000                | nop word ptr ds:[rax+rax],ax                                           |
00007FF7AB53D450 | 44:8B43 3C                            | mov r8d,dword ptr ds:[rbx+3C]                                          |
00007FF7AB53D454 | 44:0FAF43 38                          | imul r8d,dword ptr ds:[rbx+38]                                         |
00007FF7AB53D459 | 4C:634B 4C                            | movsxd r9,dword ptr ds:[rbx+4C]                                        |
00007FF7AB53D45D | 0FB786 B6000000                       | movzx eax,word ptr ds:[rsi+B6]                                         |
00007FF7AB53D464 | 48:8B53 40                            | mov rdx,qword ptr ds:[rbx+40]                                          |
00007FF7AB53D468 | 43:8D0C01                             | lea ecx,qword ptr ds:[r9+r8]                                           |
00007FF7AB53D46C | 3BC8                                  | cmp ecx,eax                                                            |
00007FF7AB53D46E | 7E 20                                 | jle fsd-win64-shipping.7FF7AB53D490                                    |
00007FF7AB53D470 | 48:C1EA 24                            | shr rdx,24                                                             |
00007FF7AB53D474 | F6D2                                  | not dl                                                                 |
00007FF7AB53D476 | F6C2 01                               | test dl,1                                                              |
00007FF7AB53D479 | 74 33                                 | je fsd-win64-shipping.7FF7AB53D4AE                                     |
00007FF7AB53D47B | 48:8B03                               | mov rax,qword ptr ds:[rbx]                                             |
00007FF7AB53D47E | 49:8BD1                               | mov rdx,r9                                                             |
00007FF7AB53D481 | 48:0355 38                            | add rdx,qword ptr ss:[rbp+38]                                          |
00007FF7AB53D485 | 48:8BCB                               | mov rcx,rbx                                                            |
00007FF7AB53D488 | FF90 E8000000                         | call qword ptr ds:[rax+E8]                                             |
00007FF7AB53D48E | EB 1E                                 | jmp fsd-win64-shipping.7FF7AB53D4AE                                    |
00007FF7AB53D490 | 48:C1EA 08                            | shr rdx,8                                                              |
00007FF7AB53D494 | F6D2                                  | not dl                                                                 |
00007FF7AB53D496 | F6C2 01                               | test dl,1                                                              |
00007FF7AB53D499 | 74 13                                 | je fsd-win64-shipping.7FF7AB53D4AE                                     |
00007FF7AB53D49B | 48:8B55 38                            | mov rdx,qword ptr ss:[rbp+38]                                          |
00007FF7AB53D49F | 4B:8D0C0F                             | lea rcx,qword ptr ds:[r15+r9]                                          |
00007FF7AB53D4A3 | 49:03D1                               | add rdx,r9                                                             |
00007FF7AB53D4A6 | 4D:63C0                               | movsxd r8,r8d                                                          |
00007FF7AB53D4A9 | E8 FB460202                           | call <JMP.&memmove>                                                    |
00007FF7AB53D4AE | 48:8B5B 68                            | mov rbx,qword ptr ds:[rbx+68]                                          |
00007FF7AB53D4B2 | 48:85DB                               | test rbx,rbx                                                           |
00007FF7AB53D4B5 | 75 99                                 | jne fsd-win64-shipping.7FF7AB53D450                                    |
00007FF7AB53D4B7 | 48:8B4D 70                            | mov rcx,qword ptr ss:[rbp+70]                                          |
00007FF7AB53D4BB | 48:8D05 E6B04902                      | lea rax,qword ptr ds:[7FF7AD9D85A8]                                    |
00007FF7AB53D4C2 | 48:8945 10                            | mov qword ptr ss:[rbp+10],rax                                          |
00007FF7AB53D4C6 | 48:85C9                               | test rcx,rcx                                                           |
00007FF7AB53D4C9 | 74 05                                 | je fsd-win64-shipping.7FF7AB53D4D0                                     |
00007FF7AB53D4CB | E8 902ED4FF                           | call fsd-win64-shipping.7FF7AB280360                                   |
00007FF7AB53D4D0 | 48:8B8D B0000000                      | mov rcx,qword ptr ss:[rbp+B0]                                          |
00007FF7AB53D4D7 | 48:33CD                               | xor rcx,rbp                                                            |
00007FF7AB53D4DA | E8 91080202                           | call fsd-win64-shipping.7FF7AD55DD70                                   |
00007FF7AB53D4DF | 48:8B9D 18010000                      | mov rbx,qword ptr ss:[rbp+118]                                         |
00007FF7AB53D4E6 | 48:8DA5 C0000000                      | lea rsp,qword ptr ss:[rbp+C0]                                          |
00007FF7AB53D4ED | 41:5F                                 | pop r15                                                                |
00007FF7AB53D4EF | 41:5E                                 | pop r14                                                                |
00007FF7AB53D4F1 | 41:5D                                 | pop r13                                                                |
00007FF7AB53D4F3 | 41:5C                                 | pop r12                                                                |
00007FF7AB53D4F5 | 5F                                    | pop rdi                                                                |
00007FF7AB53D4F6 | 5E                                    | pop rsi                                                                |
00007FF7AB53D4F7 | 5D                                    | pop rbp                                                                |
00007FF7AB53D4F8 | C3                                    | ret                                                                    |